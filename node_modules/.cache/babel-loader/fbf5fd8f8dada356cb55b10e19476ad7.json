{"ast":null,"code":"var _jsxFileName = \"/home/jeniffer/github/drawer/src/componentes/Formulario.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { useAdicionarParticipante } from \"../state/hook/useAdicionarParticipante\";\nimport { useMensagemDeErro } from \"../state/hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Formulario = () => {\n  _s();\n\n  const [nome, setNome] = useState('');\n  const inputRef = useRef(null);\n  const adicionarNaLista = useAdicionarParticipante();\n  const mensagemDeErro = useMensagemDeErro();\n\n  const adicionarParticipante = evento => {\n    var _inputRef$current;\n\n    evento.preventDefault();\n    adicionarNaLista(nome);\n    setNome('');\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: adicionarParticipante,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      value: nome,\n      onChange: evento => setNome(evento.target.value),\n      type: \"text\",\n      placeholder: \"Insira os nomes dos participantes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !nome,\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), mensagemDeErro && /*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"alert\",\n      children: mensagemDeErro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Formulario, \"Pif9w2oN929kP9gWwbWsDbzxZ9c=\", false, function () {\n  return [useAdicionarParticipante, useMensagemDeErro];\n});\n\n_c = Formulario;\nexport default Formulario;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"sources":["/home/jeniffer/github/drawer/src/componentes/Formulario.tsx"],"names":["useRef","useState","useAdicionarParticipante","useMensagemDeErro","Formulario","nome","setNome","inputRef","adicionarNaLista","mensagemDeErro","adicionarParticipante","evento","preventDefault","current","focus","target","value"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,wBAAT,QAAyC,wCAAzC;AACA,SAASC,iBAAT,QAAkC,eAAlC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMM,QAAQ,GAAGP,MAAM,CAAmB,IAAnB,CAAvB;AAEA,QAAMQ,gBAAgB,GAAGN,wBAAwB,EAAjD;AAEA,QAAMO,cAAc,GAAGN,iBAAiB,EAAxC;;AAEA,QAAMO,qBAAqB,GAAIC,MAAD,IAA8C;AAAA;;AACxEA,IAAAA,MAAM,CAACC,cAAP;AACAJ,IAAAA,gBAAgB,CAACH,IAAD,CAAhB;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACA,yBAAAC,QAAQ,CAACM,OAAT,wEAAkBC,KAAlB;AACH,GALD;;AAOA,sBAAQ;AAAM,IAAA,QAAQ,EAAEJ,qBAAhB;AAAA,4BACJ;AACI,MAAA,GAAG,EAAEH,QADT;AAEI,MAAA,KAAK,EAAEF,IAFX;AAGI,MAAA,QAAQ,EAAEM,MAAM,IAAIL,OAAO,CAACK,MAAM,CAACI,MAAP,CAAcC,KAAf,CAH/B;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,YADI,eAQJ;AAAQ,MAAA,QAAQ,EAAE,CAACX,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARI,EASHI,cAAc,iBAAI;AAAG,MAAA,IAAI,EAAC,OAAR;AAAA,gBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,YATf;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAWH,CA5BD;;GAAML,U;UAMuBF,wB,EAEFC,iB;;;KARrBC,U;AA8BN,eAAeA,UAAf","sourcesContent":["import { useRef, useState } from \"react\"\nimport { useAdicionarParticipante } from \"../state/hook/useAdicionarParticipante\"\nimport { useMensagemDeErro } from \"../state/hook\"\n\nconst Formulario = () => {\n    \n    const [nome, setNome] = useState('')\n\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    const adicionarNaLista = useAdicionarParticipante()\n\n    const mensagemDeErro = useMensagemDeErro()\n    \n    const adicionarParticipante = (evento: React.FormEvent<HTMLFormElement>) => {\n        evento.preventDefault()\n        adicionarNaLista(nome)\n        setNome('')\n        inputRef.current?.focus()\n    }\n    \n    return (<form onSubmit={adicionarParticipante}>\n        <input\n            ref={inputRef}\n            value={nome}\n            onChange={evento => setNome(evento.target.value)}\n            type=\"text\"\n            placeholder=\"Insira os nomes dos participantes\"\n        />\n        <button disabled={!nome}>Adicionar</button>\n        {mensagemDeErro && <p role=\"alert\">{mensagemDeErro}</p>}\n    </form>)\n}\n\nexport default Formulario"]},"metadata":{},"sourceType":"module"}